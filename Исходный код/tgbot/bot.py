from aiogram import Bot, Dispatcher, F, types, Router
from aiogram.filters import Command
import os
import dotenv
from database.queries import add_user, get_user
import datetime
import logging
bot = Bot(os.getenv("TELEGRAM_BOT_TOKEN"))
dp = Dispatcher()
router = Router()
dp.include_router(router)

async def send_negative_publication_notification(publication, users):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    message = f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è:\n\n"
    message += f"üìÑ –¢–µ–∫—Å—Ç: {publication.ptext[:500]}...\n\n"
    message += f"üîó –°—Å—ã–ª–∫–∞: {publication.purl}\n"
    message += f"üìÖ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {publication.pdate}\n"
    message += f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {publication.views}\n"
    message += f"‚ù§Ô∏è –õ–∞–π–∫–∏: {publication.likes}\n"
    message += f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {publication.comments}\n"
    message += f"‚Ü©Ô∏è –†–µ–ø–æ—Å—Ç—ã: {publication.reposts}"
    for user in users:
        await bot.send_message(user.tg_id, message)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    #logger.info(f"User {message.from_user.id} started bot")
    if (await get_user(message.from_user.id) == None):
        await add_user(message.from_user.id,str(int(datetime.datetime.now().timestamp())))
        await message.answer("–ë–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∑–∞–ø—É—â–µ–Ω. –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏—è—Ö.")
    else:
        await message.answer("–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É :)")
async def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    await dp.start_polling(bot)

